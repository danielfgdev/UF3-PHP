1731293119
0cc1308022480e537afa03931d99722c-phpdoc%3A0d487fea540f1ee8b6bbea2bdb78dc46-42f721e543c7985413b260d8d0b5880c
s:16508:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:6:"10.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"42f721e543c7985413b260d8d0b5880c";s:39:" phpDocumentor\Reflection\Php\File path";s:6:"10.php";s:41:" phpDocumentor\Reflection\Php\File source";s:11502:"<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>I want my 10</title>
    <style>
        body {
            overflow: hidden;
            margin: 0;
            background-color: black;
        }

        /* Estilo del video de YouTube para ocupar toda la pantalla */
        #video-background {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            pointer-events: auto;
            /* Evitar que el video capture clics */
        }

        .mensaje {
            position: absolute;
            font-size: 80px;
            font-weight: bold;
            font-family: Arial, sans-serif;
            color: white;
            z-index: 1;
            /* Encima de todo */
        }

        .countdown {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 150px;
            color: white;
            text-align: center;
            z-index: 1;
            /* Encima de todo */
        }

        /* Nuevo texto para la cuenta atrás */
        #texto-cuenta-atras {
            position: fixed;
            top: 35%;
            /* Un poco arriba de la cuenta atrás */
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 80px;
            color: white;
            z-index: 1;
            /* Encima de todo */
        }

        #contenedor {
            display: none;
        }

        /* Estilo de las imágenes de gatitos */
        .gatito {
            position: fixed;
            max-width: 30vw;
            /* Ajustar el tamaño a un 30% del ancho de la ventana */
            max-height: 30vh;
            /* Ajustar el tamaño a un 30% de la altura de la ventana */
            display: none;
            /* Ocultar inicialmente */
            z-index: 0;
            /* Detrás de los mensajes */
        }
    </style>
</head>

<body>

    <!-- Nuevo texto para la cuenta atrás -->
    <div id="texto-cuenta-atras">Cuenta atras epica xD xD</div>

    <!-- Contenedor de la cuenta atrás -->
    <div id="countdown" class="countdown">10</div>

    <!-- Contenedor de los mensajes -->
    <div id="contenedor">
        <?php for ($i = 0; $i < 5; $i++) : ?>
            <div class="mensaje" id="mensaje-<?php echo $i; ?>">Ricardito me merezco un diecito</div>
        <?php endfor; ?>
    </div>

    <!-- Video de YouTube embebido -->
    <div id="video-background"></div>

    <!-- Contenedor de imágenes de gatitos -->
    <div id="gatitos-container"></div>

    <script>
        let countdownValue = 10;
        const countdownElement = document.getElementById('countdown');
        const textoCuentaAtras = document.getElementById('texto-cuenta-atras');
        const contenedor = document.getElementById('contenedor');
        const gatitosContainer = document.getElementById('gatitos-container');

        let player;
        let isPlayerReady = false; // Variable para verificar si el reproductor está listo

        // Función para obtener imágenes de gatos
        async function fetchGatitos() {
            const response = await fetch('https://api.thecatapi.com/v1/images/search?limit=30'); // Obtener 30 imágenes
            const data = await response.json();
            return data.map(cat => cat.url); // Retornar las URLs de las imágenes
        }

        // Función de cuenta atrás
        function startCountdown() {
            const interval = setInterval(() => {
                countdownValue--;
                countdownElement.textContent = countdownValue;

                if (countdownValue <= 0) {
                    clearInterval(interval);
                    countdownElement.style.display = 'none'; // Ocultar la cuenta atrás
                    textoCuentaAtras.style.display = 'none'; // Ocultar el texto de la cuenta atrás
                    contenedor.style.display = 'block'; // Mostrar los mensajes
                    document.getElementById('video-background').style.display = 'block'; // Mostrar el video

                    // Reproducir el video solo si el reproductor está listo
                    if (isPlayerReady) {
                        player.playVideo(); // Reproducir el video de YouTube
                    } else {
                        console.error("El reproductor de YouTube no está listo.");
                    }

                    startMessageAnimation(); // Iniciar la animación de los mensajes
                    startGatitoAnimation(); // Iniciar la animación de los gatitos
                }
            }, 1000); // Cada segundo
        }

        // Función para iniciar la animación de los gatitos
        async function startGatitoAnimation() {
            const gatitos = await fetchGatitos(); // Obtener imágenes de gatos

            setInterval(() => {
                const randomIndex = Math.floor(Math.random() * gatitos.length); // Elegir un gatito aleatorio
                const gatitoElement = document.createElement('img'); // Crear un nuevo elemento img
                gatitoElement.src = gatitos[randomIndex]; // Establecer la imagen del gatito
                gatitoElement.classList.add('gatito'); // Añadir la clase gatito
                gatitoElement.style.display = 'block'; // Mostrar el gatito

                // Obtener el ancho y alto de la imagen cargada
                const img = new Image();
                img.src = gatitos[randomIndex];
                img.onload = function() {
                    const imgWidth = img.width * (30 / 100); // Ajustar el tamaño al 30%
                    const imgHeight = img.height * (30 / 100); // Ajustar el tamaño al 30%

                    // Calcular posición aleatoria dentro de los límites de la ventana
                    const maxTop = window.innerHeight - imgHeight; // Altura máxima
                    const maxLeft = window.innerWidth - imgWidth; // Ancho máximo
                    const randomTop = Math.random() * maxTop; // Posición aleatoria en Y
                    const randomLeft = Math.random() * maxLeft; // Posición aleatoria en X

                    gatitoElement.style.top = randomTop + 'px';
                    gatitoElement.style.left = randomLeft + 'px';

                    // Agregar el gatito al contenedor
                    gatitosContainer.appendChild(gatitoElement);

                    // Ocultar el gatito después de 5 segundos y eliminarlo del DOM
                    setTimeout(() => {
                        gatitosContainer.removeChild(gatitoElement); // Remover el gatito
                    }, 5000); // 5 segundos
                };

            }, 5000); // Cambiar gatito cada 5 segundos
        }

        // Función para obtener un color aleatorio
        function getRandomColor() {
            const letters = '0123456789ABCDEF';
            let color = '#';
            for (let i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

        function getRandomVelocity() {
            return (Math.random() * 2 + 1) * (Math.random() > 0.5 ? 1 : -1); // Velocidad entre -3 y 3
        }

        // Función para iniciar la animación de los mensajes
        function startMessageAnimation() {
            const mensajes = document.querySelectorAll('.mensaje');
            const heights = [
                0.1, // 10% de la altura de la ventana
                0.3, // 30%
                0.5, // 50%
                0.7, // 70%
                0.9 // 90%
            ];

            // Asignar posiciones
            mensajes.forEach((mensaje, index) => {
                const heightIndex = Math.floor(index); // La altura se asigna directamente según el índice
                const positionY = (window.innerHeight * heights[heightIndex]) - mensaje.clientHeight / 2 + 'px'; // Centrar verticalmente

                mensaje.style.top = positionY; // Asignar altura

                // Alternar entre izquierda y derecha
                const isLeft = index % 2 === 0;
                mensaje.style.left = isLeft ? -mensaje.clientWidth + 'px' : window.innerWidth + 'px'; // Izquierda o derecha

                // Establecer el color aleatorio al inicio
                mensaje.style.color = getRandomColor();

                // Velocidad de movimiento
                const velocity = getRandomVelocity(); // Si es de izquierda a derecha, la velocidad es positiva, y viceversa

                // Función de movimiento
                const moveMessage = () => {
                    const leftPosition = parseFloat(mensaje.style.left);

                    // Cambiar dirección si llega al borde
                    if (leftPosition > window.innerWidth) {
                        mensaje.style.left = -mensaje.clientWidth + 'px'; // Reiniciar posición a la izquierda
                    } else if (leftPosition < -mensaje.clientWidth) {
                        mensaje.style.left = window.innerWidth + 'px'; // Reiniciar posición a la derecha
                    } else {
                        mensaje.style.left = leftPosition + velocity + 'px'; // Mover el mensaje
                    }

                    requestAnimationFrame(moveMessage); // Volver a llamar a la función
                };

                moveMessage(); // Iniciar movimiento del mensaje
            });

            // Cambiar color de los mensajes cada 2 segundos
            setInterval(() => {
                mensajes.forEach(mensaje => {
                    mensaje.style.color = getRandomColor(); // Cambiar el color a uno nuevo
                });
            }, 2000); // Cambiar cada 2 segundos
        }

        // Función para inicializar el reproductor de YouTube
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('video-background', {
                height: '100%',
                width: '100%',
                videoId: 'am1_JLFDFMw', // ID del video
                playerVars: {
                    'autoplay': 0, // No reproducir automáticamente al cargar
                    'controls': 1,
                    'showinfo': 0,
                    'modestbranding': 1,
                    'loop': 1,
                    'playlist': 'am1_JLFDFMw', // Para que se repita
                    'fs': 0,
                    'cc_load_policy': 0,
                    'iv_load_policy': 3,
                    'disablekb': 1,
                    'rel': 0,
                    'start': 20, // Iniciar el video en el segundo 20
                    'mute': 1 // Silenciar el video
                },
                events: {
                    'onReady': function(event) {
                        isPlayerReady = true; // Marcar el reproductor como listo
                    }
                }
            });
        }

        // Iniciar la cuenta atrás
        startCountdown();
    </script>

    <script src="https://www.youtube.com/iframe_api"></script>
</body>

</html>";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";